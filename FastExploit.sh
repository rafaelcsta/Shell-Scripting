#!/bin/bash
echo '
		 _____            _    _____              _         _  _
		|  ___|__ _  ___ | |_ | ____|__  ___ __  | |  ___  (_)| |_
		| |_  / _  |/ __|| __||  _|  \ \/ /  _ \ | | / _ \ | || __|
		|  _|| (_| |\__ \| |_ | |___  >  <| |_) || || (_) || || |_
		|_|   \__,_||___/ \__||_____|/_/\_\ .__/ |_| \___/ |_| \__|
		                                  |_|
            		   Version 1.1    Author @BlackCyber
            		   https://github.com/BlackCyber21/
'
cp exploits/* /bin/
if [ "$1" == "" ]
then
echo
echo "                     Modo de uso: $0 --help"
echo "                     Modo de uso: $0 mw1"
echo
elif [ "$1" == "--help" ]
then
echo '
			mw1 = windows exe (Usa msfvenom para gerar exploit para windows)

			ma1 = android apk (Usa msfvenom para gerar exploit para android)

			mi2 = ios safari (Usa um modulo metasploit para explorar Safari)

			ms = ms17-010 share folder (Explora vulnerabilidade via SMB com exploit Ethernalblue)

			kn = samsung android knox (Usa um modulo metasploit para emular chamada ao Samsung Knox)

			gg = login google play (Tenta fazer login na Google Playstore)

			stf = stagefright Nexus (Usa um exploit .mp4 para explorar biblioteca de media android)

			ssh = usersenum ssh (Usa modulo de brute-force ssh no metasploit para enumerar usuarios)

			sshB = ssh login bruteforce (Usa modulo de brute-force ssh no metasploit)

			cydia = ios cydia remote exploit ios shell reverse (Via modulo metasploit)

		        Futuramente fazer os .rc para browsers, falhas especificas etc...
'
elif [ "$1" == "mw1" ]
then
mw1
elif [ "$1" == "ma1" ]
then
ma1
elif [ "$1" == "mi2" ]
then
mi2
elif [ "$1" == "ms" ]
then
ms
elif [ "$1" == "kn" ]
then
kn
elif [ "$1" == "gg" ]
then
gg
elif [ "$1" == "stf" ]
then
stf
elif [ "$1" == "ssh" ]
then
ssh
elif [ "$1" == "sshB" ]
then
sshB
elif [ "$1" == "cydia" ]
then
cydia
fi
